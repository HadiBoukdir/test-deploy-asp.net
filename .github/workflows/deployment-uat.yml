name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: test-deploy-aspnetcore-uat
    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: "." # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: "6.0.x" # set this to the .NET Core version to use

on:
  push:
    branches: ["uat"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: uat
          token: ${{ secrets.REPO_TOKEN }}

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Check which project has been updated
        run: |
          if git diff --name-only HEAD^ | grep -q "/centology"; then
            echo "Centology has been updated"
          fi
          if git diff --name-only HEAD^ | grep -q "/sentinel"; then
            echo "Sentinel has been updated"
          fi
          
      - name: Centology Project
        if: steps.check.outputs.contains('/centology')
        run: dotnet build pages/project1 --configuration Release

      - name: Build project2
        if: steps.check.outputs.contains('/sentinel')
        run: dotnet build pages/project2 --configuration Release
          
      - name: Set tag format
        run: echo "TAG_FORMAT=\${major}.\${minor}.\${patch}" >> $GITHUB_ENV
        
      - name: Bump version number
        id: version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: "V"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: ${{ env.TAG_FORMAT }}
          
      - name: Update version
        if: steps.check.outputs.contains('/centology')
        env:
          UATCENTOLOGYVERSIONTAG: steps.version.outputs.version
        
      - name: Print version
        run: echo $CENTOLOGY_VERSION

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Build with dotnet
        run: dotnet build --configuration Release -p:Version=${{ steps.version.outputs.version }}

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp -p:Version=${{ steps.version.outputs.version }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
          
      - name: Tag repository
        run: git tag ${{ steps.version.outputs.version_tag }}
      - name: Push Tags
        run: git push --tags

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "UAT"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.UAT_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
